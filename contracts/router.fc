#include "common/stdlib.fc";
#include "common/errors.fc";
#include "common/utils.fc";


() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    if (in_msg_body.slice_empty?()) {
        return ();
    }

    slice cs = in_msg_full.begin_parse();
    int flags = cs~load_uint(4);

    if (flags & 1) {
        return ();
    }

    slice sender_address = cs~load_msg_addr();

    (int op, int query_id) = (in_msg_body~load_uint(32), in_msg_body~load_uint(64));

    if (op == op::transfer_notification) {
        (int jetton_amount, slice from_user) = (in_msg_body~load_coins(), in_msg_body~load_slice());
        cell ref_cs = in_msg_body~load_ref();
        slice ref_ds = ref_cs.begin_parse();

        throw_unless(INVALID_AMOUNT, jetton_amount > 0);

        (int ref_ds::op, slice token_wallet) = (ref_ds~load_uint(32), ref_ds~load_msg_addr());
        force_chain_0(token_wallet, WRONG_WORKCHAIN);
        ;; TODO: Check if call is valid
        if (ref_ds::op == op::fund_user) {
            
        }
    }

    if (op == op::pay_to) {

    }
}
